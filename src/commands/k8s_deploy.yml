description: >
  This command will deploy a previously built docker image to k8s
parameters:
  deployment_environment:
    description: |
      Which deployment environment to deploy to? Options: ["STAGING", "PRODUCTION"]
    type: enum
    enum: ["STAGING", "PRODUCTION"]
    default: STAGING
  cluster_name:
    description: |
      Which k8s cluster to deploy to?
    type: string
  aws_region:
    description: |
      Which aws region to deploy to? Options: ["us-east-1", "eu-central-1"]
    type: enum
    enum: ["us-east-1", "eu-central-1"]
    default: eu-central-1
  resource_name:
    type: string
  resource_file_path:
    type: string
    default: deployment/deployment.yaml
  namespace:
    type: string
  project_name:
    description: |
      The name of the project to be used in the notification template.
    type: string
  project_git_url:
    description: |
      the url to the project in git, try using pipeline.project.git_url
    type: string
  repository_name:
    description: Name of an Amazon ECR repository
    type: string
    default: ''
steps:
  - run:
      name: Update env variables for << parameters.deployment_environment >> deployment environment
      command: |
        echo 'export DEPLOYMENT_ENVIRONMENT="<< parameters.deployment_environment >>"' >> $BASH_ENV
        echo 'export KUBE_AWS_REGION="<< parameters.aws_region >>"' >> $BASH_ENV
        echo 'export ARTIFACT_VERSION="${CIRCLE_SHA1:0:7}"' >> $BASH_ENV
        echo 'export ARTIFACT_REPOSITORY_NAME="<< parameters.repository_name >>"' >> $BASH_ENV
        source $BASH_ENV
  - checkout
  - aws-eks/update-kubeconfig-with-authenticator:
      install-aws-cli: true
      install-kubectl: true
      kubectl-version: v1.23.6
      aws-region: << parameters.aws_region >>
      cluster-name: << parameters.cluster_name >>
  - run:
      name: Test EKS connection
      command: |
        kubectl get deployments -n << parameters.namespace >>
  - kubernetes/create-or-update-resource:
      get-rollout-status: true
      resource-file-path: << parameters.resource_file_path >>
      resource-name: << parameters.resource_name >>
      namespace: << parameters.namespace >>
      show-kubectl-command: true
      envsubst: true
  - slack_notify:
      branch_pattern: main
      event: fail
      header: "<< parameters.project_name >>: Deployment to << parameters.cluster_name >> failed :red_circle:"
      git_url: << parameters.project_git_url >>
  - slack_notify:
      branch_pattern: main
      event: pass
      header: "<< parameters.project_name >>: Deployment to << parameters.cluster_name >> succeeded :white_check_mark:"
      git_url: << parameters.project_git_url >>
