description: >
  This command will deploy a previously built docker image to k8s
parameters:
  cluster_name:
    description: |
      Which environment to deploy? Options: ["pl-prod", "pl-stage"]
    type: enum
    enum: ["pl-prod", "pl-stage"]
    default: "pl-stage"
  resource_name:
    type: string
  resource_file_path:
    type: string
    default: deployment/deployment.yaml
  namespace:
    type: string
  git_url:
    description: |
      the url to the project in git, try using pipeline.project.git_url
    type: string

steps:
  - when:
      condition:
        equal: [ "pl-stage", << parameters.cluster_name >> ]
      steps:
        - run:
            name: Update env variables for pl-stage
            command: |
              echo 'export KUBE_AWS_REGION="us-east-1"' >> $BASH_ENV
              echo 'export ARTIFACT_VERSION="${CIRCLE_SHA1:0:7}"' >> $BASH_ENV
              echo 'export DEPLOYMENT_ENVIRONMENT="STAGING"' >> $BASH_ENV
              source $BASH_ENV
  - unless:
      condition:
        equal: [ "pl-stage", << parameters.cluster_name >> ]
      steps:
        - run:
            name: Update env variables for pl-prod
            command: |
              echo 'export KUBE_AWS_REGION="eu-central-1"' >> $BASH_ENV
              echo 'export ARTIFACT_VERSION="${CIRCLE_SHA1:0:7}"' >> $BASH_ENV
              echo 'export DEPLOYMENT_ENVIRONMENT="PRODUCTION"' >> $BASH_ENV
              source $BASH_ENV
  - checkout
  - aws-eks/update-kubeconfig-with-authenticator:
      install-aws-cli: true
      install-kubectl: true
      kubectl-version: v1.23.6
      aws-region: ${KUBE_AWS_REGION}
      cluster-name: << parameters.cluster_name >>
  - run:
      name: Test EKS connection
      command: |
        kubectl get deployments -n << parameters.namespace >>
  - kubernetes/create-or-update-resource:
      get-rollout-status: true
      resource-file-path: << parameters.resource_file_path >>
      resource-name: << parameters.resource_name >>
      namespace: << parameters.namespace >>
      show-kubectl-command: true
      envsubst: true
  - slack_notify:
      branch_pattern: main
      event: fail
      header: "Deployment to << parameters.cluster_name >> failed :red_circle:"
      git_url: << parameters.git_url >>
  - slack_notify:
      branch_pattern: main
      event: pass
      header: "Deployment to << parameters.cluster_name >> succeeded :white_check_mark:"
      git_url: << parameters.git_url >>
