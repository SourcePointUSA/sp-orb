description: >
  This command is a wrapper around the slack orb to provide more custom messaging
parameters:
  header:
    type: string
  event:
    description: |
      In what event should this message send? Options: ["fail", "pass", "always"]
    type: enum
    enum: ["fail", "pass", "always"]
    default: "always"
  circleci_host:
    default: https://circleci.com
    description: |
      CircleCI Host (used as the base for the Workflow URL)
    type: string
  git_url:
    description: |
      the url to the project in git, try using pipeline.project.git_url
    type: string
  link_to_workflow:
    description: |
      should the action button link directly to workflow
    type: boolean
    default: false
  branch_pattern:
    description: |
      A comma separated list of regex matchable branch names.
      Notifications will only be sent if sent from a job from these branches.
      By default ".+" will be used to match all branches.
      Pattern must match the full string, no partial matches.
    type: string
    default: ".+"
  debug:
    description: |
      Enable to view full payload being sent to Slack and response being received from the API call.
      Redacted content can be viewed by re-running the job with SSH and accessing the log files referenced in the job output.
      When run in a persistent build environment such as CircleCI Runner, these debug log files may remain in the system's temporary filesystem indefinitely and accumulate over time.
    type: boolean
    default: false

steps:
  - when:
      condition: << parameters.link_to_workflow >>
      steps:
        - run:
            name: Update env variables for slack message content (link_to_workflow=true)
            command: |
              echo 'export SLACK_MESSAGE_HEADER="<< parameters.header >>"' >> $BASH_ENV
              echo 'export SLACK_GIT_URL="<< parameters.git_url >>"' >> $BASH_ENV
              echo 'export CIRCLE_CI_ACTION_LINK="<< parameters.circleci_host >>/workflow-run/${CIRCLE_WORKFLOW_ID}"' >> $BASH_ENV
              source $BASH_ENV
  - unless:
      condition: << parameters.link_to_workflow >>
      steps:
        - run:
            name: Update env variables for slack message content (link_to_workflow=false)
            command: |
              echo 'export SLACK_MESSAGE_HEADER="<< parameters.header >>"' >> $BASH_ENV
              echo 'export SLACK_GIT_URL="<< parameters.git_url >>"' >> $BASH_ENV
              echo 'export CIRCLE_CI_ACTION_LINK="${CIRCLE_BUILD_URL}"' >> $BASH_ENV
              source $BASH_ENV
  - slack/notify:
      event: <<parameters.event>>
      branch_pattern: <<parameters.branch_pattern>>
      debug: <<parameters.debug>>
      custom: |
        {
          "text": "$SLACK_MESSAGE_HEADER",
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "$SLACK_MESSAGE_HEADER",
                "emoji": true
              }
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Project*: $CIRCLE_PROJECT_REPONAME"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Branch*: $CIRCLE_BRANCH"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Author*: $CIRCLE_USERNAME"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Build Number*: $CIRCLE_BUILD_NUM"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Commit*: <${SLACK_GIT_URL}/commit/${CIRCLE_SHA1}|${CIRCLE_SHA1:0:7}>"
                }
              ],
              "accessory": {
                "type": "image",
                "image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
                "alt_text": "CircleCI logo"
              }
            },
            {
              "type": "actions",
              "elements": [
                {
                  "type": "button",
                  "text": {
                    "type": "plain_text",
                    "text": "View in CircleCI"
                  },
                  "url": "${CIRCLE_CI_ACTION_LINK}"
                }
              ]
            }
          ]
        }
